<?php
/**
 * This file is part of Docalist Data.
 *
 * Copyright (C) 2012-2018 Daniel Ménard
 *
 * For copyright and license information, please view the
 * LICENSE.txt file that was distributed with this source code.
 */
namespace Docalist\Data\Scripts\PostalAddressFormat;

/**
 * Ce script génère le fichier de ressources postal-address-formats.php qui est utilisé par la classe
 * PostalAddressFormatter pour gérer l'affichage et la saisie des adresses postales.
 *
 * Il utilise les données de la librairie googlei18n/libaddressinput.
 *
 * @see https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata
 */

// Ce script doit être lancé en ligne de commande
if (php_sapi_name() !== 'cli') {
    echo 'This script must be run from the command line.', "\n";
    return;
}

// Charge le helper
require __DIR__ . '/PostalAddressFormatsHelper.php';
$helper = new PostalAddressFormatsHelper();
echo '- Google API: ', $helper::API, "\n";

// Détermine le path du fichier résultat
$dir = __DIR__ . '/../..';
$file = '/resources/postal-address-formats.php';
$path = $dir . $file;
echo '- Destination file: ~', $file, "\n";

// Demande confirmation avant d'écraser le fichier existant
if (file_exists($path)) {
    echo '- Existing file will be overwritten. Are you sure you want to do this [y/N]? ';
    $confirmation  =  trim(fgets(STDIN));
    if ( $confirmation !== 'y' ) {
        echo '- Aborting', "\n";
        return;
    }
    echo "- Ok, let's go!\n";
}

// Utilise ou non le cache
if (false) {
    $helper->setCacheDirectory(__DIR__ . '/cache/');
    echo "- Cache is enabled\n";
} else {
    echo "- Cache is disabled\n";
}

// Charge la liste des pays
echo "- Getting country list";
$countries = $helper->getCountries();
echo ' : ', count($countries), " countries\n";

// Charge tous les pays
echo "- Getting country data:\n";
$data = [];
foreach($countries as $i => $country) {
    echo '  ', $country;
    if ($i % 20 === 19) echo "\n";
    $data[$country] = $helper->getDataFor($country);
}
echo "\n";

// Charge la valeur par défaut (code 'ZZ')
echo "- Getting default values (code ZZ)\n";
$data['ZZ'] = $helper->getDefault();

// Applique les corrections disponibles
$data = $helper->applyCorrections($data);

// Génère le contenu du fichier
$year = date('Y');
$date = date('Y/m/d');
$data = $helper->prettyVarExport($data);
$content = <<<EOT
<?php
/**
 * This file is part of Docalist Data.
 *
 * Copyright (C) 2012-$year Daniel Ménard
 *
 * For copyright and license information, please view the
 * LICENSE.txt file that was distributed with this source code.
 */
namespace Docalist\Data\Scripts\PostalAddressFormat;

/*
 * WARNING: This file has been generated by the script $argv[0]
 * Do not modify this file directly!
 *
 * Generation date: $date.
 *
 * Disable PHP_CodeSniffer warnings for lines which exceed the limit (e.g. the 'GB' entry)
 * phpcs:disable Generic.Files.LineLength.TooLong
 */

return $data;

EOT;

// Génère le fichier
echo '- Generating file ~', $file, "\n";
$handle = fopen($path, 'w');
fputs($handle, $content);
fclose($handle);

// Terminé
echo '- Done';
